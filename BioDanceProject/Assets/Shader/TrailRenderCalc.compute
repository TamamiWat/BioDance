#pragma kernel CalcLorenz

struct Particle
{
    float3 position;
    float3 velocity;
    float lifetime;
};

/*
**set from CPU
*/
RWStructuredBuffer<Particle> _particle;
float _deltaTime;
float _dragTime;
float3 _dragPos;

//Lorenz Parameters
float _p;
float _r;
float _b;


[numthreads(256,1,1)]
void CalcLorenz (uint3 id : SV_DispatchThreadID)
{
    uint index = id.x;
    Particle particle = _particle[index];
    float3 vel = particle.velocity;

    //calc lorenz
    vel.x += _deltaTime * (-_p * particle.position.x + _p * particle.position.y);
    vel.y += _deltaTime * (-particle.position.x * particle.position.z + _r * particle.position.x - particle.position.y);
    vel.z += vel.z += _deltaTime * (particle.position.x * particle.position.y - _b * particle.position.z);

    particle.position += vel * _deltaTime;

    if(_dragTime > 0)
    {
        float3 direction = normalize(_dragPos - particle.position);
        vel += direction * _dragTime * 0.1;
    }

    particle.lifetime -= _deltaTime;
    _particle[index] = particle;

}